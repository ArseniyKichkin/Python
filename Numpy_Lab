from PIL import Image
import numpy as np
import os

# Эпизод 1
counter = 0
for photo in os.listdir("First"):

    img = Image.open(os.path.join("First", photo))
    data = np.array(img)

    updated_data = (data - np.min(data)) * (255 / (np.max(data) - np.min(data)))
    print(updated_data)

    res_img = Image.fromarray(updated_data).convert('L')
    res_img.save(str(counter)+'.jpg')
    counter += 1

# Эпизод 2

fig, ax = plt.subplots(len(os.listdir("signals")), 2, figsize=(18, 12), constrained_layout=True)
counter = 0
for file in os.listdir("signals"):
    data = np.loadtxt(os.path.join("signals", file))
    ax[counter, 0].plot(np.arange(0, len(data)), data)
    ax[counter, 0].set_title(file[:-4])

    new_data = np.convolve(data, np.ones(10), mode='valid') / 10
    ax[counter, 1].plot(np.arange(0, len(new_data)), new_data)
    ax[counter, 1].set_title(file[:-4])
    counter += 1

plt.savefig("22.png")
plt.show()

# Эпизод 3

import matplotlib.animation as animation
import matplotlib.pyplot as plt

U = np.loadtxt("start.dat.txt")
A = np.eye(len(U))
A[np.arange(U.shape[0]), np.arange(U.shape[0])-1] = -1

fig = plt.figure()
ax = plt.axes(xlim=(0, len(U)), ylim=(0, max(U)))
ax.grid()
line, = ax.plot([], [], lw=2)


def init():
    line.set_data([], [])
    return line,


def animate(n):
    global U
    x = np.linspace(0, len(U))
    if n == 0:
        line.set_data(x, U)
        return line,
    U = U - 0.5 * A @ U
    line.set_data(x, U)
    return line,


anim = animation.FuncAnimation(fig, animate, init_func=init,
                               frames=255, interval=50, blit=True)

anim.save('animation.gif')
